--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))();
local Window = Rayfield:CreateWindow({Name="[RELEASE!] Project New World By VernyHub",LoadingTitle="[RELEASE!] Project New World By VernyHub",LoadingSubtitle="by Verny Hub",ConfigurationSaving={Enabled=true,FolderName="Verny Hub V2",FileName="Verny Hub PNW"},Discord={Enabled=true,Invite="dwuSS95ecF",RememberJoins=true},KeySystem=false,KeySettings={Title="Sirius Hub",Subtitle="Key System",Note="Join the discord (discord.gg/sirius)",FileName="SiriusKey",SaveKey=true,GrabKeyFromSite=false,Key="Hello"}});
local Tab = Window:CreateTab("Main", 4483362458);
_G.plrn = game.Players.LocalPlayer.Name;
for i, v in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
	if v:IsA("NumberValue") then
		v.Value = 0;
	end
end
game:GetService("ReplicatedStorage").Replication.ClientEvents.ChooseTeam:InvokeServer("Pirates");
game:GetService("Players").LocalPlayer.PlayerData.GeppoLevel.Value = 3;
local maps = game:GetService("Workspace").Logic.Ignore.IslandHitboxes;
local mapsTable = {};
for i, v in ipairs(maps:GetChildren()) do
	if v:IsA("Model") then
		table.insert(mapsTable, v.Name);
	end
end
local Dropdown = Tab:CreateDropdown({Name="Select Map",Options=mapsTable,CurrentOption="Option 1",Flag="MapSave1",Callback=function(Option)
	_G.CurrentMap = Option;
end});
local Slider = Tab:CreateSlider({Name="Change Distance",Range={1,100},Increment=1,Suffix="Distance",CurrentValue=10,Flag="Distance1",Callback=function(Value)
	_G.distance = Value;
end});
local Dropdown = Tab:CreateDropdown({Name="Select Method",Options={"Behind","Above","Below","Front"},CurrentOption="Option 1",Flag="Method",Callback=function(Option)
	_G.method = Option;
end});
local Toggle = Tab:CreateToggle({Name="Auto Farm Selected Area",CurrentValue=false,Flag="AutoFarm",Callback=function(Value)
	_G.autoFarm = Value;
end});
task.spawn(function()
	while wait() do
		if ((_G.CurrentMap ~= nil) and (_G.method ~= nil) and _G.autoFarm) then
			for i, v in ipairs(game:GetService("Workspace")["NPC Zones"]:WaitForChild(_G.CurrentMap).NPCS:GetChildren()) do
				if v:IsA("Model") then
					pcall(function()
						if (_G.method == "Behind") then
							local New_CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, _G.distance);
							local ts = game:GetService("TweenService");
							local char = game.Players.LocalPlayer.Character;
							local part = char.HumanoidRootPart;
							local ti = TweenInfo.new(0.2, Enum.EasingStyle.Linear);
							local tp = {CFrame=New_CFrame};
							ts:Create(part, ti, tp):Play();
						elseif (_G.method == "Above") then
							local New_CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, _G.distance, 0);
							local ts = game:GetService("TweenService");
							local char = game.Players.LocalPlayer.Character;
							local part = char.HumanoidRootPart;
							local ti = TweenInfo.new(0.2, Enum.EasingStyle.Linear);
							local tp = {CFrame=New_CFrame};
							ts:Create(part, ti, tp):Play();
						elseif (_G.method == "Below") then
							local New_CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, -_G.distance, 0);
							local ts = game:GetService("TweenService");
							local char = game.Players.LocalPlayer.Character;
							local part = char.HumanoidRootPart;
							local ti = TweenInfo.new(0.2, Enum.EasingStyle.Linear);
							local tp = {CFrame=New_CFrame};
							ts:Create(part, ti, tp):Play();
						elseif (_G.method == "Front") then
							local New_CFrame = v.HumanoidRootPart.CFrame * CFrame.new(_G.distance, 0, 0);
							local ts = game:GetService("TweenService");
							local char = game.Players.LocalPlayer.Character;
							local part = char.HumanoidRootPart;
							local ti = TweenInfo.new(0.2, Enum.EasingStyle.Linear);
							local tp = {CFrame=New_CFrame};
							ts:Create(part, ti, tp):Play();
						end
					end);
				end
			end
		end
	end
end);
local Tab = Window:CreateTab("Auto Fight", 4483362458);
local Section = Tab:CreateSection("Combat");
local Toggle = Tab:CreateToggle({Name="Auto Equip Combat ",CurrentValue=false,Flag="AutoEquipCombat",Callback=function(Value)
	_G.autoEquip = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoEquip then
			pcall(function()
				game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack.Combat);
				wait(1);
			end);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Punch ",CurrentValue=false,Flag="Autopunch",Callback=function(Value)
	_G.autoPunch = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoPunch then
			pcall(function()
				workspace[_G.plrn].Combat.Punch:FireServer(1);
				wait(0.1);
			end);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Heavy Punch",CurrentValue=false,Flag="Auto Heavy",Callback=function(Value)
	_G.autoHeavy = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoHeavy then
			pcall(function()
				for i, v in ipairs(game:GetService("Workspace")["NPC Zones"]:WaitForChild(_G.CurrentMap).NPCS:GetChildren()) do
					if v:IsA("Model") then
						workspace[_G.plrn].Combat.Events.DetriotSmash:FireServer(1, CFrame.new(v.HumanoidRootPart.Position));
					end
				end
			end);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Ground Smash",CurrentValue=false,Flag="Auto Ground Smash",Callback=function(Value)
	_G.autoGround = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoGround then
			pcall(function()
				workspace[_G.plrn].Combat.Events.GroundSmash:FireServer();
				wait(0.2);
			end);
		end
	end
end);
local Tab = Window:CreateTab("Auto Quest", 4483362458);
local Dropdown = Tab:CreateDropdown({Name="Select World (For Quest)",Options={"1","2","3","4","5","6","7","8","9","10"},CurrentOption="Option 1",Flag="QuestMap",Callback=function(Option)
	_G.QuestMap = Option;
end});
local Dropdown = Tab:CreateDropdown({Name="Select Quest",Options={"Level 1","Level 10","Level 25","Level 40","Level 60","Level 90","Level 120","Level 160","Level 200","Level 250","Level 300","Level 350","Level 400","Level 450","Level 500","Level 550","Level 600","Level 650","Level 700","Level 750","Level 800","Level 850","Level 900"},CurrentOption="Option 1",Flag="QuestLVL",Callback=function(Option)
	_G.CurrentQuest = Option;
end});
local Toggle = Tab:CreateToggle({Name="Auto Take Quest",CurrentValue=false,Flag="Auto Quest",Callback=function(Value)
	_G.autoQuest = Value;
end});
task.spawn(function()
	while wait() do
		if (_G.autoQuest and (_G.QuestMap ~= nil) and _G.CurrentQuest) then
			pcall(function()
				if (game:GetService("Players").LocalPlayer.Quest.Beli.Value < 1) then
					game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.QuestFunction:InvokeServer(workspace.Npc_Workspace.QuestGivers[_G.QuestMap][_G.QuestMap], _G.CurrentQuest);
					wait(0.5);
				elseif (game:GetService("Players").LocalPlayer.Quest.Beli.Value > 1) then
					wait(0.5);
					warn("Already Got Quest");
				end
			end);
		end
	end
end);
local Tab = Window:CreateTab("Auto Stats", 4483362458);
local Paragraph = Tab:CreateParagraph({Title="You Currently Have",Content=(game:GetService("Players").LocalPlayer.PlayerData.Experience.Points.Value .. " Points")});
_G.aup = true;
task.spawn(function()
	while wait() do
		if _G.aup then
			Paragraph:Set({Title="You Currently Have",Content=(game:GetService("Players").LocalPlayer.PlayerData.Experience.Points.Value .. " Points")});
			wait();
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Stat Combat",CurrentValue=false,Flag="Auto Stat Combat",Callback=function(Value)
	_G.autoStat1 = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoStat1 then
			game:GetService("ReplicatedStorage").Replication.ClientEvents.Stats_Event:FireServer("Combat", 1);
			wait(0.05);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Stat Defense",CurrentValue=false,Flag="Auto Stat Defense",Callback=function(Value)
	_G.autoStat2 = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoStat2 then
			game:GetService("ReplicatedStorage").Replication.ClientEvents.Stats_Event:FireServer("Defense", 1);
			wait(0.05);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Stat Sword",CurrentValue=false,Flag="Auto Stat Sword",Callback=function(Value)
	_G.autoStat3 = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoStat3 then
			game:GetService("ReplicatedStorage").Replication.ClientEvents.Stats_Event:FireServer("Sword", 1);
			wait(0.05);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Stat Fruit",CurrentValue=false,Flag="Auto Stat Fruit",Callback=function(Value)
	_G.autoStat4 = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoStat4 then
			game:GetService("ReplicatedStorage").Replication.ClientEvents.Stats_Event:FireServer("Fruit", 1);
			wait(0.05);
		end
	end
end);
local Tab = Window:CreateTab("Chests/Fruits", 4483362458);
local Section = Tab:CreateSection("Fruits");
local Input = Tab:CreateInput({Name="Input Fruit to auto drop",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitDrop1 = Text;
end});
local Input = Tab:CreateInput({Name="Input Fruit to auto drop",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitDrop2 = Text;
end});
local Input = Tab:CreateInput({Name="Input Fruit to auto drop",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitDrop3 = Text;
end});
local Toggle = Tab:CreateToggle({Name="Auto Drop Selected Fruits",CurrentValue=false,Flag="autodrop",Callback=function(Value)
	_G.autodrop = Value;
end});
task.spawn(function()
	while wait() do
		if (_G.autodrop and (_G.FruitDrop ~= nil)) then
			game:GetService("ReplicatedStorage").Replication.ClientEvents.DropFruit:InvokeServer(workspace.Logic.FruitDrops[_G.plrn][_G.FruitDrop1]);
			wait(1);
			game:GetService("ReplicatedStorage").Replication.ClientEvents.DropFruit:InvokeServer(workspace.Logic.FruitDrops[_G.plrn][_G.FruitDrop2]);
			wait(1);
			game:GetService("ReplicatedStorage").Replication.ClientEvents.DropFruit:InvokeServer(workspace.Logic.FruitDrops[_G.plrn][_G.FruitDrop3]);
		end
	end
end);
local Input = Tab:CreateInput({Name="Input Fruit to auto eat",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitEat1 = Text;
end});
local Input = Tab:CreateInput({Name="Input Fruit to auto eat",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitEat2 = Text;
end});
local Input = Tab:CreateInput({Name="Input Fruit to auto eat",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitEat3 = Text;
end});
local Input = Tab:CreateInput({Name="Input Fruit to auto eat",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitEat4 = Text;
end});
local Input = Tab:CreateInput({Name="Input Fruit to auto eat",PlaceholderText="Input Fruit Name",RemoveTextAfterFocusLost=false,Callback=function(Text)
	_G.FruitEat5 = Text;
end});
local Toggle = Tab:CreateToggle({Name="Auto Eat Selected Fruit",CurrentValue=false,Flag="autoeat",Callback=function(Value)
	_G.autoeat = Value;
end});
task.spawn(function()
	while wait() do
		if (_G.autoeat and (_G.FruitEat1 ~= nil)) then
			workspace[_G.plrn][_G.FruitEat1].Activate:FireServer();
			wait(1);
			workspace[_G.plrn][_G.FruitEat2].Activate:FireServer();
			wait(1);
			workspace[_G.plrn][_G.FruitEat3].Activate:FireServer();
			wait(1);
			workspace[_G.plrn][_G.FruitEat4].Activate:FireServer();
			wait(1);
			workspace[_G.plrn][_G.FruitEat5].Activate:FireServer();
		end
	end
end);
local Section = Tab:CreateSection("Chests");
local Toggle = Tab:CreateToggle({Name="Auto Teleport To Chests",CurrentValue=false,Flag="AutoChest",Callback=function(Value)
	_G.autoChest = Value;
end});
task.spawn(function()
	while wait() do
		if _G.autoChest then
			local New_CFrame = game:GetService("Workspace").Chest.Main.CFrame;
			local ts = game:GetService("TweenService");
			local char = game.Players.LocalPlayer.Character;
			local part = char.HumanoidRootPart;
			local ti = TweenInfo.new(10, Enum.EasingStyle.Linear);
			local tp = {CFrame=New_CFrame};
			ts:Create(part, ti, tp):Play();
			wait(10);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Teleport To Fruits 1",CurrentValue=false,Flag="AutoFruits1",Callback=function(Value)
	_G.AutoFruit1 = Value;
end});
task.spawn(function()
	while wait() do
		if _G.AutoFruit1 then
			for i, v in ipairs(game:GetService("Workspace"):GetChildren()) do
				if v:IsA("Tool") then
					if v.Droppable then
						local New_CFrame = v.Handle.CFrame;
						local ts = game:GetService("TweenService");
						local char = game.Players.LocalPlayer.Character;
						local part = char.HumanoidRootPart;
						local ti = TweenInfo.new(10, Enum.EasingStyle.Linear);
						local tp = {CFrame=New_CFrame};
						ts:Create(part, ti, tp):Play();
						wait(12.5);
						fireproximityprompt(v.Handle.ProximityPrompt);
					end
				end
			end
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Teleport To Fruits 2",CurrentValue=false,Flag="AutoFruits2",Callback=function(Value)
	_G.AutoFruit2 = Value;
end});
task.spawn(function()
	while wait() do
		if _G.AutoFruit2 then
			for i, v in ipairs(game:GetService("Workspace").Logic.FruitDrops:GetDescendants()) do
				if v:IsA("Tool") then
					if v.Droppable then
						local New_CFrame = v.Handle.CFrame;
						local ts = game:GetService("TweenService");
						local char = game.Players.LocalPlayer.Character;
						local part = char.HumanoidRootPart;
						local ti = TweenInfo.new(10, Enum.EasingStyle.Linear);
						local tp = {CFrame=New_CFrame};
						ts:Create(part, ti, tp):Play();
						wait(12.5);
						fireproximityprompt(v.Handle.ProximityPrompt);
					end
				end
			end
		end
	end
end);
local Tab = Window:CreateTab("Teleports ", 4483362458);
local spawners = game:GetService("Workspace")['Npc_Workspace']["Spawn Setters"];
local spawnerTable = {};
for i, v in ipairs(spawners:GetChildren()) do
	if v:IsA("Model") then
		table.insert(spawnerTable, v.Name);
	end
end
local Dropdown = Tab:CreateDropdown({Name="Select Island",Options=spawnerTable,CurrentOption="Option 1",Flag="Spawners",Callback=function(Option)
	_G.checkpoint = Option;
end});
local Button = Tab:CreateButton({Name="Teleport to Selected Island",Callback=function()
	local New_CFrame = game:GetService("Workspace")['Npc_Workspace']["Spawn Setters"][_G.checkpoint].Clicker.CFrame;
	local ts = game:GetService("TweenService");
	local char = game.Players.LocalPlayer.Character;
	local part = char.HumanoidRootPart;
	local ti = TweenInfo.new(10, Enum.EasingStyle.Linear);
	local tp = {CFrame=New_CFrame};
	local IslandTween = ts:Create(part, ti, tp):Play();
end});
local Button = Tab:CreateButton({Name="Set Spawn To Selected Island",Callback=function()
	game:GetService("ReplicatedStorage").Replication.ClientEvents.SetSpawnPoint:FireServer(_G.checkpoint);
end});
local Button = Tab:CreateButton({Name="Reset Charater",Callback=function()
	game.Players.LocalPlayer.Character.Humanoid.Health = 0;
end});
local Tab = Window:CreateTab("Local Player ", 4483362458);
local Slider = Tab:CreateSlider({Name="Slider Example",Range={60,600},Increment=1,Suffix="Bananas",CurrentValue=10,Flag="WalkSpeed",Callback=function(Value)
	_G.WalkSpeed = Value;
end});
local Toggle = Tab:CreateToggle({Name="Toggle WalkSpeed",CurrentValue=false,Flag="wsToggle",Callback=function(Value)
	_G.wsToggle = Value;
end});
task.spawn(function()
	while wait() do
		if (_G.wsToggle and (_G.WalkSpeed ~= nil)) then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.WalkSpeed;
		end
	end
end);
local Tab = Window:CreateTab("Server Hop", 4483362458);
local Slider = Tab:CreateSlider({Name="Time To Hop Every Game(Lowest Player Game)",Range={120,1200},Increment=10,Suffix="Seconds",CurrentValue=10,Flag="Slider1",Callback=function(Value)
	_G.HopTime = Value;
end});
local Toggle = Tab:CreateToggle({Name="Auto Server Hop (Lowest)",CurrentValue=false,Flag="wsToggle",Callback=function(Value)
	_G.autoServerLowest = Value;
end});
task.spawn(function()
	while wait() do
		if (_G.autoServerLowest and (_G.HopTime ~= nil)) then
			wait(_G.HopTime);
			local Http = game:GetService("HttpService");
			local TPS = game:GetService("TeleportService");
			local Api = "https://games.roblox.com/v1/games/";
			local _place = game.PlaceId;
			local _servers = "https://games.roblox.com/v1/games/" .. _place .. "/servers/Public?sortOrder=Asc&limit=100";
			function ListServers(cursor)
				local Raw = game:HttpGet(_servers .. ((cursor and ("&cursor=" .. cursor)) or ""));
				return Http:JSONDecode(Raw);
			end
			local Server, Next;
			repeat
				local Servers = ListServers(Next);
				Server = Servers.data[1];
				Next = Servers.nextPageCursor;
			until Server
			TPS:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer);
			wait(1);
		end
	end
end);
local Toggle = Tab:CreateToggle({Name="Auto Server Hop (Normal)",CurrentValue=false,Flag="wsToggle",Callback=function(Value)
	_G.autoServerNormal = Value;
end});
task.spawn(function()
	while wait() do
		if (_G.autoServerNormal and (_G.HopTime ~= nil)) then
			wait(_G.HopTime);
			local Player = game.Players.LocalPlayer;
			local Http = game:GetService("HttpService");
			local TPS = game:GetService("TeleportService");
			local Api = "https://games.roblox.com/v1/games/";
			local _place, _id = game.PlaceId, game.JobId;
			local _servers = "https://games.roblox.com/v1/games/" .. _place .. "/servers/Public?sortOrder=Desc&limit=100";
			function ListServers(cursor)
				local Raw = game:HttpGet(_servers .. ((cursor and ("&cursor=" .. cursor)) or ""));
				return Http:JSONDecode(Raw);
			end
			local Next;
			repeat
				local Servers = ListServers(Next);
				for i, v in next, Servers.data do
					if ((v.playing < v.maxPlayers) and (v.id ~= _id)) then
						local s, r = pcall(TPS.TeleportToPlaceInstance, TPS, _place, v.id, Player);
						if s then
							break;
						end
					end
				end
				Next = Servers.nextPageCursor;
			until not Next
			wait(1);
		end
	end
end);
Rayfield:LoadConfiguration();
